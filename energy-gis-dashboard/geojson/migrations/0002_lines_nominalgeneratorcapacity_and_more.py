# Generated by Django 4.2.7 on 2024-01-28 18:30

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('geojson', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lines',
            fields=[
                ('line', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('bus0', models.CharField(max_length=255)),
                ('bus1', models.CharField(max_length=255)),
                ('length', models.FloatField()),
                ('num_parallel', models.FloatField()),
                ('carrier', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('s_max_pu', models.FloatField()),
                ('s_nom', models.FloatField()),
                ('capital_cost', models.FloatField()),
                ('s_nom_extendable', models.BooleanField()),
                ('s_nom_min', models.FloatField()),
                ('x', models.FloatField()),
                ('r', models.FloatField()),
                ('b', models.FloatField()),
                ('build_year', models.IntegerField(blank=True, null=True)),
                ('x_pu_eff', models.FloatField()),
                ('r_pu_eff', models.FloatField()),
                ('s_nom_opt', models.FloatField()),
                ('v_nom', models.FloatField()),
                ('g', models.FloatField(blank=True, null=True)),
                ('s_nom_max', models.FloatField(blank=True, null=True)),
                ('lifetime', models.FloatField(blank=True, null=True)),
                ('terrain_factor', models.FloatField(blank=True, null=True)),
                ('v_ang_min', models.FloatField(blank=True, null=True)),
                ('v_ang_max', models.FloatField(blank=True, null=True)),
                ('sub_network', models.CharField(blank=True, max_length=255, null=True)),
                ('x_pu', models.FloatField(blank=True, null=True)),
                ('r_pu', models.FloatField(blank=True, null=True)),
                ('g_pu', models.FloatField(blank=True, null=True)),
                ('b_pu', models.FloatField(blank=True, null=True)),
                ('line_geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'public.network_lines_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NominalGeneratorCapacity',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('bus', models.CharField(max_length=255)),
                ('v_nom', models.FloatField()),
                ('country', models.CharField(max_length=255)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('control', models.CharField(max_length=255)),
                ('generator', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('v_mag_pu_set', models.FloatField()),
                ('v_mag_pu_min', models.FloatField()),
                ('sub_network', models.CharField(blank=True, max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('carrier', models.CharField(max_length=255)),
                ('p_nom', models.FloatField()),
            ],
            options={
                'db_table': 'public.view_nominal_generator_capacity_with_geom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NominalStorageCapacity',
            fields=[
                ('bus', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('carrier', models.CharField(max_length=255)),
                ('p_nom', models.FloatField()),
            ],
            options={
                'db_table': 'public.view_nominal_storage_unit_capacity_with_geom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OptimalGeneratorCapacity',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('bus', models.CharField(max_length=255)),
                ('v_nom', models.FloatField()),
                ('country', models.CharField(max_length=255)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('control', models.CharField(max_length=255)),
                ('generator', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('v_mag_pu_set', models.FloatField()),
                ('v_mag_pu_min', models.FloatField()),
                ('sub_network', models.CharField(blank=True, max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('carrier', models.CharField(max_length=255)),
                ('p_nom_opt', models.FloatField()),
            ],
            options={
                'db_table': 'public.view_optimal_generator_capacity_with_geom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OptimalStorageCapacity',
            fields=[
                ('bus', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('carrier', models.CharField(max_length=255)),
                ('p_nom_opt', models.FloatField()),
            ],
            options={
                'db_table': 'public.view_optimal_storage_unit_capacity_with_geom',
                'managed': False,
            },
        ),
    ]
